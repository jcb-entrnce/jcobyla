<!--
Ant build file 

junit.jar must be supplied in directory lib.
-->

<project name="jcobyla " default="dist" basedir=".">
  <description>
        COBYLA2 is an implementation of Powell's nonlinear derivative free
        constrained optimization that uses a linear approximation approach.
        The algorithm is a sequential trust region algorithm that employs
        linear approximations to the objective and constraint functions, where
        the approximations are formed by linear interpolation at n + 1 points
        in the space of the variables and tries to maintain a regular shaped
        simplex over iterations.

        It solves nonsmooth NLP with a moderate number of variables (about
        100). Inequality constraints only.

        The initial point X is taken as one vertex of the initial simplex with
        zero being another, so, X should not be entered as the zero vector.
  </description>

  <!-- set global properties for this build -->
  <property name="src"     location="src/main/java"/>
  <property name="testsrc" location="src/test/java" />
  <property name="build"   location="build"/>
  <property name="test"    location="test"/>
  <property name="dist"    location="dist"/>
  <property name="lib"     location="lib"/>
  <property name="report"  location="report" />
  <property name="build.sysclasspath" value="ignore" />

  <path id="classpath" description="project classpath">
    <fileset dir="${lib}">
      <include name="**/*.jar" />
      <exclude name="**/.SVN/*.*"/>
    </fileset>
    <pathelement location="${build}" />
    <pathelement location="${test}" />
  </path>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${test}"/>
    <delete dir="${dist}"/>
    <delete dir="${report}" />
  </target>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
    <mkdir dir="${lib}"/>
    <mkdir dir="${test}"/>
    <mkdir dir="${report}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}"/>
  </target>

  <target name="dist" depends="clean,compile"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>

    <!-- Put everything in ${build} into the jcobyla-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/lib/jcobyla-${DSTAMP}.jar" basedir="${build}"/>
  </target>
  
  <target name="compiletest" depends="init"
        description="compile the tests" >
    <javac srcdir="${testsrc}" destdir="${test}">
      <classpath refid="classpath" />
    </javac>
  </target>

  <target name="test" depends="compiletest"
        description="test" >
    <junit printsummary="yes" fork="yes" haltonfailure="yes">
      <classpath refid="classpath" />
      <formatter type="plain" />
      <batchtest fork="false" todir="${report}">
        <fileset dir="${testsrc}">
          <include name="**/*Test*.java" />
        </fileset>
      </batchtest>
    </junit>
  </target>
</project>
